Import-Module ImportExcel -ea 'stop' -PassThru

write-warning 'This is a very slightly modified version of "Examples/ExampleTemplates/Getting Started with ImportExcel.ps1"'
$ExportRootPath = 'g:\temp\xl\auto-output'
function New-SafeTimeString {
    <#
    .SYNOPSIS
        returns a time now value, in a format safe for autogenerated filee
    .example
        Pwsh> New-SafeTimeString -FilenameTemplate 'export-{0}.xlsx'
    .example
        Pwsh> New-SafeTimeString
    .notes
        The level of precision is a full second. You could use milliseconds, but decided not to for mine

      "2022-08-17_12-46-47Z".
      #>
     param(
        [Parameter(Position=0)]
        [ArgumentCompletions('export-{0}.xlsx', 'autoexport_{0}.xlsx')]
        [string]$FilenameTemplate = 'autoexport_{0}.xlsx'
     )

     (Get-Date).ToString('u') -replace '\s+', '_' -replace ':', '-'
     | Join-String -f $FilenameTemplate
}

$ExcelPath = Join-path $ExportRootPath (New-SafeTimeString -FilenameTemplate 'export-{0}.xlsx')

Remove-Item -ea ignore $ExcelPath
$Pkg = Open-ExcelPackage -Path $ExcelPath -Create
$ExcelPath | Join-String -op 'Started package file for destination: '

$shareSplat = @{
    'TableStyle' = 'Light2'
    AutoSize = $true
    PassThru = $True
}

# example using Ps5 syntax
$Pkg = @( gci ~ -file )
    | Select-Object Name, Extension, Length, Parent, FullName, LastWriteTime, CreationTime
    | Export-Excel @shareSplat -ExcelPackage $Pkg -table 'AppData' -WorksheetName 'AppDataSheet'

$pkg = @( gci $Env:LOCALAPPDATA )
    | Select-Object Name, Length, FullName, LastWriteTime, CreationTime
    | Export-Excel @shareSplat -ExcelPackage $Pkg -table 'LocalAppData' -WorksheetName 'LocalAppDataSheet'

'wrote file: {0}' -f @( $Pkg.File )
Close-ExcelPackage $Pkg -Show
